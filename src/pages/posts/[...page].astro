---
import { getCollection } from 'astro:content'
import Layout from '../../components/Layout.astro'
import PostCard from '../../components/PostCard.astro'
import Pagination from '../../components/Pagination.astro'
import { getSlugFromFilename } from '../../utils/slug'
import { getPaginationProps } from '../../utils/pagination'
import { POSTS_PER_PAGE } from '../../site.config'

export async function getStaticPaths() {
  const allPosts = await getCollection('posts', ({ data }) => !data.draft)
  const totalPages = Math.ceil(allPosts.length / POSTS_PER_PAGE)
  
  const paths = []
  
  // Add the first page without /1
  if (totalPages > 0) {
    paths.push({
      params: { page: undefined },
      props: { currentPage: 1, totalPosts: allPosts.length }
    })
  }
  
  // Add numbered pages
  for (let i = 2; i <= totalPages; i++) {
    paths.push({
      params: { page: i.toString() },
      props: { currentPage: i, totalPosts: allPosts.length }
    })
  }
  
  return paths
}

const { currentPage, totalPosts } = Astro.props
const allPosts = await getCollection('posts', ({ data }) => !data.draft)
const sortedPosts = allPosts.sort((a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf())

const pagination = getPaginationProps(currentPage, totalPosts, POSTS_PER_PAGE, '/posts')
const startIndex = (currentPage - 1) * POSTS_PER_PAGE
const endIndex = startIndex + POSTS_PER_PAGE
const posts = sortedPosts.slice(startIndex, endIndex)

const pageTitle = currentPage === 1 ? 'All Posts' : `All Posts - Page ${currentPage}`
const pageDescription = currentPage === 1 
  ? 'Browse all blog posts about web development, Astro, MDX, and more.'
  : `Browse all blog posts - Page ${currentPage} of ${pagination.totalPages}`
---

<Layout
  title={pageTitle}
  description={pageDescription}
  canonical={currentPage === 1 ? '/posts' : `/posts/${currentPage}`}
>
  <div class="bg-white dark:bg-gray-900 min-h-screen">
    <!-- Header -->
    <div class="bg-gray-50 dark:bg-gray-800 border-b border-gray-200 dark:border-gray-700">
      <div class="container mx-auto px-4 sm:px-6 lg:px-8 py-12">
        <div class="max-w-4xl mx-auto text-center">
          <h1 class="text-4xl font-bold text-gray-900 dark:text-white mb-4">
            {pageTitle}
          </h1>
          <p class="text-xl text-gray-600 dark:text-gray-300">
            {pageDescription}
          </p>
        </div>
      </div>
    </div>

    <!-- Posts Grid -->
    <div class="container mx-auto px-4 sm:px-6 lg:px-8 py-12">
      <div class="max-w-6xl mx-auto">
        {posts.length > 0 ? (
          <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8">
            {posts.map((post) => (
              <PostCard post={post} />
            ))}
          </div>
        ) : (
          <div class="text-center py-12">
            <div class="max-w-md mx-auto">
              <svg class="w-16 h-16 mx-auto text-gray-400 dark:text-gray-500 mb-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z" />
              </svg>
              <h3 class="text-lg font-medium text-gray-900 dark:text-white mb-2">
                No posts found
              </h3>
              <p class="text-gray-500 dark:text-gray-400">
                There are no posts available on this page.
              </p>
            </div>
          </div>
        )}

        <!-- Pagination -->
        {pagination.totalPages > 1 && (
          <div class="mt-12">
            <Pagination {...pagination} />
          </div>
        )}
      </div>
    </div>
  </div>
</Layout>
