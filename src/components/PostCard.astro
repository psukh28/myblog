---
import type { CollectionEntry } from 'astro:content'
import { formatDateShort, getRelativeTime } from '../utils/date'
import { getSlugFromFilename } from '../utils/slug'
import Tag from './Tag.astro'

export interface Props {
  post: CollectionEntry<'posts'>
  featured?: boolean
}

const { post, featured = false } = Astro.props
const { data } = post
const slug = getSlugFromFilename(post.id)
const postUrl = `/posts/${slug}/`
---

<article class={`group ${featured ? 'max-w-2xl mx-auto' : ''}`}>
  <div class="card card-hover h-full">
    {data.coverImage && (
      <div class="aspect-w-16 aspect-h-9 overflow-hidden rounded-t-xl">
        <img
          src={data.coverImage}
          alt={data.coverAlt || data.title}
          class="w-full h-48 object-cover group-hover:scale-105 transition-transform duration-300"
          loading="lazy"
        />
      </div>
    )}
    
    <div class="p-6">
      <div class="flex items-center justify-between text-sm text-sage-500 dark:text-sage-400 mb-3">
        <time datetime={data.pubDate.toISOString()} class="font-mono text-xs">
          {formatDateShort(data.pubDate)}
        </time>
        {data.readingTime && (
          <span class="text-xs">{data.readingTime} min read</span>
        )}
      </div>
      
      <h2 class={`font-medium text-sage-900 dark:text-sage-100 group-hover:text-moss-600 dark:group-hover:text-moss-400 transition-colors mb-3 ${
        featured ? 'text-2xl' : 'text-xl'
      }`}>
        <a href={postUrl} class="hover:underline">
          {data.title}
        </a>
      </h2>
      
      <p class="text-sage-600 dark:text-sage-300 mb-4 line-clamp-3 leading-relaxed">
        {data.description}
      </p>
      
      {data.tags && data.tags.length > 0 && (
        <div class="flex flex-wrap gap-2 mb-4">
          {data.tags.slice(0, 3).map((tag) => (
            <Tag name={tag} />
          ))}
          {data.tags.length > 3 && (
            <span class="text-xs text-sage-500 dark:text-sage-400">
              +{data.tags.length - 3} more
            </span>
          )}
        </div>
      )}
      
      <div class="flex items-center justify-between">
        <a 
          href={postUrl}
          class="inline-flex items-center text-moss-600 dark:text-moss-400 hover:text-moss-700 dark:hover:text-moss-300 font-medium text-sm transition-colors"
        >
          read more
          <svg class="w-3 h-3 ml-1 group-hover:translate-x-1 transition-transform" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7" />
          </svg>
        </a>
        
        {data.updatedDate && data.updatedDate.getTime() !== data.pubDate.getTime() && (
          <span class="text-xs text-sage-500 dark:text-sage-400">
            updated {getRelativeTime(data.updatedDate)}
          </span>
        )}
      </div>
    </div>
  </div>
</article>

<style>
  .line-clamp-3 {
    display: -webkit-box;
    -webkit-line-clamp: 3;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
</style>